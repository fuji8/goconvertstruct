// Code generated by gotypeconverter; DO NOT EDIT.
package knoq

import (
	"github.com/gofrs/uuid"
	"github.com/traPtitech/knoQ/domain"
	"github.com/traPtitech/knoQ/repository"
)

func ConvertrepositoryEventTodomainEvent(src repository.Event) (dst domain.Event) {
	dst.ID = src.ID
	dst.Name = src.Name
	dst.Description = src.Description
	dst.Room = ConvertrepositoryRoomTodomainRoom(src.Room)
	dst.TimeStart = src.TimeStart
	dst.TimeEnd = src.TimeEnd
	dst.CreatedBy = ConvertuuidUUIDTodomainUser(src.CreatedBy)
	dst.Tags = make([]domain.EventTag, len(src.Tags))
	for i := range src.Tags {
		dst.Tags[i] = ConvertrepositoryTagTodomainEventTag(src.Tags[i])
	}
	dst.AllowTogether = src.AllowTogether
	dst.Model.CreatedAt = src.Model.CreatedAt
	dst.Model.UpdatedAt = src.Model.UpdatedAt
	dst.Model.DeletedAt = (*src.Model.DeletedAt)
	return
}

func ConvertrepositoryRoomTodomainRoom(src repository.Room) (dst domain.Room) {
	dst.ID = src.ID
	dst.Place = src.Place
	dst.TimeStart = src.TimeStart
	dst.TimeEnd = src.TimeEnd
	dst.Events = make([]domain.Event, len(src.Events))
	for i := range src.Events {
		dst.Events[i] = ConvertrepositoryEventTodomainEvent(src.Events[i])
	}
	dst.CreatedBy = ConvertuuidUUIDTodomainUser(src.CreatedBy)
	return
}

func ConvertuuidUUIDTodomainUser(src uuid.UUID) (dst domain.User) {
	dst.ID = src
	return
}

func ConvertrepositoryTagTodomainEventTag(src repository.Tag) (dst domain.EventTag) {
	dst.Tag.ID = src.ID
	dst.Tag.Name = src.Name
	dst.Locked = src.Locked
	return
}
